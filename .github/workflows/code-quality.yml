name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  eslint:
    name: ESLint Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Run ESLint (Server)
        run: npx eslint server/ --ext .js --format=json --output-file eslint-server-results.json
        continue-on-error: true

      - name: Run ESLint (Client)
        run: cd client && npx eslint src/ --ext .ts,.tsx --format=json --output-file ../eslint-client-results.json
        continue-on-error: true

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: |
            eslint-server-results.json
            eslint-client-results.json
          retention-days: 30

  prettier:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Check Prettier formatting (Server)
        run: npx prettier --check "server/**/*.js"

      - name: Check Prettier formatting (Client)
        run: cd client && npx prettier --check "src/**/*.{ts,tsx,css}"

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    if: github.event.repository.private == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci

      - name: Run tests with coverage
        run: |
          npm run test:server:coverage
          cd client && npm test -- --coverage --passWithNoTests

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  complexity-analysis:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install complexity analysis tool
        run: npm install -g complexity-report

      - name: Run complexity analysis (Server)
        run: cr --format json --output complexity-server.json server/

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Run complexity analysis (Client)
        run: cd client && cr --format json --output ../complexity-client.json src/

      - name: Upload complexity results
        uses: actions/upload-artifact@v4
        with:
          name: complexity-results
          path: |
            complexity-server.json
            complexity-client.json
          retention-days: 30

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const buildDir = path.join(process.cwd(), 'client', 'build', 'static');
            
            function getFileSize(filePath) {
              const stats = fs.statSync(filePath);
              return Math.round(stats.size / 1024); // KB
            }
            
            function analyzeBundleSize(dir) {
              const files = fs.readdirSync(dir, { withFileTypes: true });
              const analysis = { js: [], css: [] };
              
              files.forEach(file => {
                if (file.isDirectory()) {
                  const subDir = path.join(dir, file.name);
                  const subAnalysis = analyzeBundleSize(subDir);
                  analysis.js.push(...subAnalysis.js);
                  analysis.css.push(...subAnalysis.css);
                } else {
                  const filePath = path.join(dir, file.name);
                  const size = getFileSize(filePath);
                  
                  if (file.name.endsWith('.js')) {
                    analysis.js.push({ name: file.name, size });
                  } else if (file.name.endsWith('.css')) {
                    analysis.css.push({ name: file.name, size });
                  }
                }
              });
              
              return analysis;
            }
            
            try {
              const analysis = analyzeBundleSize(buildDir);
              const totalJsSize = analysis.js.reduce((sum, file) => sum + file.size, 0);
              const totalCssSize = analysis.css.reduce((sum, file) => sum + file.size, 0);
              
              console.log('ðŸ“¦ Bundle Size Analysis:');
              console.log(`Total JS Size: ${totalJsSize} KB`);
              console.log(`Total CSS Size: ${totalCssSize} KB`);
              console.log(`Total Bundle Size: ${totalJsSize + totalCssSize} KB`);
              
              // Save analysis to file
              fs.writeFileSync('bundle-analysis.json', JSON.stringify({
                totalJsSize,
                totalCssSize,
                totalSize: totalJsSize + totalCssSize,
                files: analysis
              }, null, 2));
            } catch (error) {
              console.error('Error analyzing bundle:', error);
            }

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.json
          retention-days: 30