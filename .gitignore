# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Production builds
/build
/dist
/out

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Note: Gatsby's public folder is a build output, but React's public folder should be tracked
# Only ignore Gatsby's public if you're using Gatsby specifically
# public

# Storybook build outputs
.out
.storybook-out
storybook-static

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed

# Coverage directory used by tools like istanbul
coverage

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Users Environment variables
.lock-wscript

# IDEs and editors (Sublime, Atom, VS Code, etc.)
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.sublime-project
*.sublime-workspace

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# React specific
# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# DevContainer volumes (if using local development)
.devcontainer/.env

# Docker
.dockerignore
docker-compose.override.yml

# Backup files
*.bak
*.backup
*.tmp

# Database
*.sqlite
*.sqlite3
*.db

# API keys and secrets (additional safety)
secrets.json
config/secrets.js
.secrets

# MacOS specific
.AppleDouble
.LSOverride
Icon

# Windows specific
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux specific
*~

# JetBrains IDEs
.idea/
*.iws
*.iml
*.ipr

# VS Code specific (keep tasks and launch configs)
.vscode/*
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/settings.json

# Webpack
.webpack/

# Optional local configuration files
local.json
local.js

# Package lock files (choose one based on your preference)
# Uncomment the one you DON'T want to track:
# package-lock.json
# yarn.lock

# Testing
/coverage
.nyc_output

# ESLint cache
.eslintcache

# Prettier cache
.prettiercache

# Bundle analyzer
bundle-analyzer-report.html

# Generated documentation
docs/api/

# Temporary files
*.tmp
*.temp
